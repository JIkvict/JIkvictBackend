{
  "openapi": "3.0.1",
  "info": {
    "title": "OpenAPI definition",
    "version": "v0"
  },
  "servers": [
    {
      "url": "http://localhost:8080",
      "description": "Generated server url"
    }
  ],
  "paths": {
    "/api/assignment/{id}": {
      "get": {
        "tags": [
          "assignment-controller"
        ],
        "operationId": "getAssignment",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Assignment"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "assignment-controller"
        ],
        "operationId": "updateAssignment",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssignmentDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/AssignmentDto"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "assignment-controller"
        ],
        "operationId": "deleteAssignment",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/assignment-groups/{id}": {
      "get": {
        "tags": [
          "assignment-group-controller"
        ],
        "operationId": "getAssignmentGroupById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssignmentGroupDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "assignment-group-controller"
        ],
        "operationId": "updateAssignmentGroup",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssignmentGroupDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssignmentGroupDto"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "assignment-group-controller"
        ],
        "operationId": "deleteAssignmentGroup",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/auth/register": {
      "post": {
        "tags": [
          "auth-controller"
        ],
        "operationId": "register",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TokenResponse"
                }
              }
            }
          }
        }
      }
    },
    "/auth/refresh": {
      "post": {
        "tags": [
          "auth-controller"
        ],
        "operationId": "refresh",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TokenResponse"
                }
              }
            }
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": [
          "auth-controller"
        ],
        "summary": "Log in",
        "description": "Logs in a user and returns an access token and a refresh token.",
        "operationId": "login",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request, invalid credentials",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetail"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/solution-checker/submit": {
      "post": {
        "tags": [
          "solution-checker-controller"
        ],
        "operationId": "submitSolution",
        "parameters": [
          {
            "name": "assignmentId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "file"
                ],
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PendingStatusResponseLong"
                }
              }
            }
          }
        }
      }
    },
    "/api/assignment": {
      "post": {
        "tags": [
          "assignment-controller"
        ],
        "operationId": "createAssignment",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAssignmentDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PendingStatusResponseLong"
                }
              }
            }
          }
        }
      }
    },
    "/api/assignment-groups": {
      "get": {
        "tags": [
          "assignment-group-controller"
        ],
        "operationId": "getAllAssignmentGroups",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Zero-based page index (0..N)",
            "required": false,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "default": 0
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "The size of the page to be returned",
            "required": false,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "default": 20
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedModelAssignmentGroupDto"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "assignment-group-controller"
        ],
        "operationId": "createAssignmentGroup",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssignmentGroupDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssignmentGroupDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ping": {
      "get": {
        "tags": [
          "basic-controller"
        ],
        "operationId": "ping",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/hello": {
      "get": {
        "tags": [
          "basic-controller"
        ],
        "operationId": "hello",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CustomResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/task-status/status/{taskId}": {
      "get": {
        "tags": [
          "task-status-controller"
        ],
        "operationId": "getTaskStatus",
        "parameters": [
          {
            "name": "taskId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PendingStatusResponseLong"
                }
              }
            }
          }
        }
      }
    },
    "/api/assignment/{id}/info": {
      "get": {
        "tags": [
          "assignment-controller"
        ],
        "operationId": "getAssignmentInfoForUser",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/AssignmentInfo"
                }
              }
            }
          }
        }
      }
    },
    "/api/assignment/zip/{assignmentId}": {
      "get": {
        "tags": [
          "assignment-controller"
        ],
        "operationId": "downloadZip",
        "parameters": [
          {
            "name": "assignmentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "byte"
                }
              }
            }
          }
        }
      }
    },
    "/api/assignment/all": {
      "get": {
        "tags": [
          "assignment-controller"
        ],
        "operationId": "getAll",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AssignmentDto"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AssignmentDto": {
        "required": [
          "cpuLimit",
          "endDate",
          "id",
          "isClosed",
          "maxPoints",
          "maximumAttempts",
          "memoryLimit",
          "pidsLimit",
          "startDate",
          "taskId",
          "timeOutSeconds",
          "title"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "taskId": {
            "type": "integer",
            "format": "int32"
          },
          "maxPoints": {
            "type": "integer",
            "format": "int32"
          },
          "startDate": {
            "type": "string",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "format": "date-time"
          },
          "timeOutSeconds": {
            "type": "integer",
            "format": "int64"
          },
          "memoryLimit": {
            "type": "integer",
            "format": "int64"
          },
          "cpuLimit": {
            "type": "integer",
            "format": "int64"
          },
          "pidsLimit": {
            "type": "integer",
            "format": "int64"
          },
          "isClosed": {
            "type": "boolean"
          },
          "maximumAttempts": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "AssignmentGroupDto": {
        "required": [
          "assignmentIds",
          "name",
          "userIds"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "userIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          },
          "assignmentIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          }
        }
      },
      "RegisterRequest": {
        "required": [
          "password",
          "username"
        ],
        "type": "object",
        "properties": {
          "password": {
            "type": "string"
          },
          "username": {
            "type": "string"
          }
        }
      },
      "TokenResponse": {
        "required": [
          "accessToken",
          "tokenType"
        ],
        "type": "object",
        "properties": {
          "accessToken": {
            "type": "string"
          },
          "tokenType": {
            "type": "string"
          }
        }
      },
      "ProblemDetail": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "format": "uri"
          },
          "title": {
            "type": "string"
          },
          "status": {
            "type": "integer",
            "format": "int32"
          },
          "detail": {
            "type": "string"
          },
          "instance": {
            "type": "string",
            "format": "uri"
          },
          "properties": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            }
          }
        }
      },
      "LoginRequest": {
        "required": [
          "password",
          "username"
        ],
        "type": "object",
        "properties": {
          "username": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        }
      },
      "PendingStatusResponseLong": {
        "required": [
          "status"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "integer",
            "format": "int64"
          },
          "status": {
            "type": "string",
            "enum": [
              "DONE",
              "PENDING",
              "FAILED",
              "REJECTED"
            ]
          },
          "message": {
            "type": "string"
          }
        }
      },
      "CreateAssignmentDto": {
        "required": [
          "assignmentGroupsIds",
          "cpuLimit",
          "endDate",
          "maxPoints",
          "memoryLimit",
          "pidsLimit",
          "startDate",
          "taskId",
          "timeOutSeconds",
          "title"
        ],
        "type": "object",
        "properties": {
          "title": {
            "type": "string"
          },
          "taskId": {
            "type": "integer",
            "format": "int32"
          },
          "maxPoints": {
            "type": "integer",
            "format": "int32"
          },
          "startDate": {
            "type": "string",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "format": "date-time"
          },
          "timeOutSeconds": {
            "type": "integer",
            "format": "int64"
          },
          "memoryLimit": {
            "type": "integer",
            "format": "int64"
          },
          "cpuLimit": {
            "type": "integer",
            "format": "int64"
          },
          "pidsLimit": {
            "type": "integer",
            "format": "int64"
          },
          "assignmentGroupsIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          }
        }
      },
      "CustomResponse": {
        "required": [
          "message"
        ],
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          }
        }
      },
      "Assignment": {
        "required": [
          "assignmentGroups",
          "cpuLimit",
          "endDate",
          "id",
          "maxPoints",
          "maximumAttempts",
          "memoryLimit",
          "pidsLimit",
          "startDate",
          "taskId",
          "timeOutSeconds",
          "title"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "taskId": {
            "type": "integer",
            "format": "int32"
          },
          "maxPoints": {
            "type": "integer",
            "format": "int32"
          },
          "startDate": {
            "type": "string",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "format": "date-time"
          },
          "timeOutSeconds": {
            "type": "integer",
            "format": "int64"
          },
          "assignmentGroups": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AssignmentGroup"
            }
          },
          "memoryLimit": {
            "type": "integer",
            "format": "int64"
          },
          "cpuLimit": {
            "type": "integer",
            "format": "int64"
          },
          "pidsLimit": {
            "type": "integer",
            "format": "int64"
          },
          "maximumAttempts": {
            "type": "integer",
            "format": "int32"
          },
          "isClosed": {
            "type": "boolean"
          },
          "closed": {
            "type": "boolean",
            "writeOnly": true
          }
        }
      },
      "AssignmentGroup": {
        "required": [
          "assignments",
          "id",
          "name",
          "users"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "users": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/User"
            }
          },
          "assignments": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Assignment"
            }
          }
        }
      },
      "GrantedAuthority": {
        "type": "object",
        "properties": {
          "authority": {
            "type": "string"
          }
        }
      },
      "Role": {
        "required": [
          "id",
          "name",
          "users"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "users": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/User"
            }
          }
        }
      },
      "User": {
        "required": [
          "assignmentGroups",
          "authorities",
          "id",
          "isAccountNonExpired",
          "isAccountNonLocked",
          "isCredentialsNonExpired",
          "isEnabled",
          "roles"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "userNameField": {
            "type": "string"
          },
          "userPassword": {
            "type": "string"
          },
          "roles": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Role"
            }
          },
          "assignmentGroups": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AssignmentGroup"
            }
          },
          "username": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "isEnabled": {
            "type": "boolean"
          },
          "authorities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GrantedAuthority"
            }
          },
          "isAccountNonExpired": {
            "type": "boolean"
          },
          "isAccountNonLocked": {
            "type": "boolean"
          },
          "isCredentialsNonExpired": {
            "type": "boolean"
          }
        }
      },
      "AssignmentInfo": {
        "required": [
          "assignmentId",
          "attemptsUsed",
          "maxAttempts",
          "results",
          "taskId"
        ],
        "type": "object",
        "properties": {
          "assignmentId": {
            "type": "integer",
            "format": "int64"
          },
          "taskId": {
            "type": "integer",
            "format": "int32"
          },
          "maxAttempts": {
            "type": "integer",
            "format": "int32"
          },
          "attemptsUsed": {
            "type": "integer",
            "format": "int32"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AssignmentResultDto"
            }
          }
        }
      },
      "AssignmentResultDto": {
        "required": [
          "points",
          "timeStamp"
        ],
        "type": "object",
        "properties": {
          "timeStamp": {
            "type": "string",
            "format": "date-time"
          },
          "points": {
            "type": "integer",
            "format": "int32"
          },
          "result": {
            "$ref": "#/components/schemas/TestSuiteResult"
          }
        }
      },
      "TestResult": {
        "required": [
          "displayName",
          "earnedPoints",
          "logs",
          "passed",
          "possiblePoints",
          "testName"
        ],
        "type": "object",
        "properties": {
          "testName": {
            "type": "string"
          },
          "displayName": {
            "type": "string"
          },
          "possiblePoints": {
            "type": "integer",
            "format": "int32"
          },
          "earnedPoints": {
            "type": "integer",
            "format": "int32"
          },
          "passed": {
            "type": "boolean"
          },
          "logs": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "TestSuiteResult": {
        "required": [
          "testResults",
          "totalEarnedPoints",
          "totalPossiblePoints"
        ],
        "type": "object",
        "properties": {
          "testResults": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TestResult"
            }
          },
          "totalPossiblePoints": {
            "type": "integer",
            "format": "int32"
          },
          "totalEarnedPoints": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "PageMetadata": {
        "type": "object",
        "properties": {
          "size": {
            "type": "integer",
            "format": "int64"
          },
          "number": {
            "type": "integer",
            "format": "int64"
          },
          "totalElements": {
            "type": "integer",
            "format": "int64"
          },
          "totalPages": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "PagedModelAssignmentGroupDto": {
        "type": "object",
        "properties": {
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AssignmentGroupDto"
            }
          },
          "page": {
            "$ref": "#/components/schemas/PageMetadata"
          }
        }
      }
    }
  }
}