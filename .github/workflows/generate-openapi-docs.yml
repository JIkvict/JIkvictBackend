name: Generate and Publish OpenAPI Documentation

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'API version (leave empty for auto-increment)'
        required: false
        type: string
  schedule:
    - cron: '0 0 * * *'

permissions:
  contents: write

jobs:
  generate-docs:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
          cache: 'gradle'

      - name: Generate OpenAPI documentation
        run: SPRING_PROFILES_ACTIVE=local ./gradlew generateOpenApiDocs
        continue-on-error: true

      - name: Determine API version
        id: version
        run: |
          mkdir -p /tmp/openapi-docs
          cp build/openapi/openapi.json /tmp/openapi-docs/

          if [ -n "${{ github.event.inputs.version }}" ]; then
            echo "Using manually specified version: ${{ github.event.inputs.version }}"
            echo "api_version=${{ github.event.inputs.version }}" >> $GITHUB_OUTPUT
          else
            git fetch origin docs || true
            if git ls-remote --heads origin docs | grep docs; then
              git worktree add --detach /tmp/docs-branch origin/docs
              LATEST_VERSION=$(find /tmp/docs-branch -maxdepth 1 -type d -name "v*" | sort -V | tail -n 1 | sed 's/.*\/v//' || echo "0")
              rm -rf /tmp/docs-branch
            else
              LATEST_VERSION="0"
            fi
            NEW_VERSION=$((LATEST_VERSION + 1))
            echo "Auto-incrementing to version: $NEW_VERSION"
            echo "api_version=$NEW_VERSION" >> $GITHUB_OUTPUT
          fi

      - name: Configure Git
        run: |
          git config --global user.email "github-actions@github.com"
          git config --global user.name "GitHub Actions"

      - name: Create orphan docs branch
        run: |
          if git ls-remote --heads origin docs | grep docs; then
            git fetch origin docs
            git checkout --orphan temp_docs
            git reset --hard
            git commit --allow-empty -m "Initial commit for docs branch"

            git worktree add --detach /tmp/docs-branch origin/docs
            mkdir -p ./
            cp -r /tmp/docs-branch/* ./ 2>/dev/null || true
            rm -rf /tmp/docs-branch
          else
            git checkout --orphan docs
            git reset --hard
            git commit --allow-empty -m "Initial commit for docs branch"
          fi

          VERSION_DIR="v${{ steps.version.outputs.api_version }}"
          mkdir -p "$VERSION_DIR"
          mkdir -p latest

          cp /tmp/openapi-docs/openapi.json "$VERSION_DIR/"
          cp /tmp/openapi-docs/openapi.json latest/

      - name: Commit and push OpenAPI documentation
        run: |
          git config --local user.email "github-actions@github.com"
          git config --local user.name "GitHub Actions"
          git add .
          git commit -m "Update OpenAPI documentation to version ${{ steps.version.outputs.api_version }}" || echo "No changes to commit"

          if git rev-parse --verify temp_docs 2>/dev/null; then
            git branch -D docs || true
            git branch -m temp_docs docs
          fi

          git push -f origin docs

      - name: Upload OpenAPI docs as artifact
        uses: actions/upload-artifact@v4
        with:
          name: openapi-docs
          path: ./
