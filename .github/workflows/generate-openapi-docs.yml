name: Generate and Publish OpenAPI Documentation

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'API version (leave empty for auto-increment)'
        required: false
        type: string
  schedule:
    - cron: '0 0 * * *'

permissions:
  contents: write


jobs:
  generate-docs:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
          cache: 'gradle'

      - name: Generate OpenAPI documentation
        run: ./gradlew generateOpenApiDocs
        continue-on-error: true

      - name: Create docs branch if it doesn't exist
        run: |
          git fetch
          if ! git ls-remote --heads origin docs | grep docs; then
            git checkout -b docs
            git push -u origin docs
          else
            git checkout docs
            git pull origin docs
          fi



      - name: Determine API version
        id: version
        run: |
          if [ -n "${{ github.event.inputs.version }}" ]; then
            # Use manually specified version
            echo "Using manually specified version: ${{ github.event.inputs.version }}"
            echo "api_version=${{ github.event.inputs.version }}" >> $GITHUB_OUTPUT
          else
            # Auto-increment version
            LATEST_VERSION=$(find api-docs -maxdepth 1 -type d -name "v*" | sort -V | tail -n 1 | sed 's/api-docs\/v//' || echo "0")
            NEW_VERSION=$((LATEST_VERSION + 1))
            echo "Auto-incrementing to version: $NEW_VERSION"
            echo "api_version=$NEW_VERSION" >> $GITHUB_OUTPUT
          fi

      - name: Copy OpenAPI docs to versioned directory
        run: |
          VERSION_DIR="api-docs/v${{ steps.version.outputs.api_version }}"
          mkdir -p "$VERSION_DIR"
          cp build/openapi/openapi.json "$VERSION_DIR/"
          # Also update the latest version
          mkdir -p api-docs/latest
          cp build/openapi/openapi.json api-docs/latest/

      - name: Commit and push OpenAPI documentation
        run: |
          git config --local user.email "github-actions@github.com"
          git config --local user.name "GitHub Actions"
          git add api-docs/
          git commit -m "Update OpenAPI documentation to version ${{ steps.version.outputs.api_version }}" || echo "No changes to commit"
          git push origin docs

      - name: Upload OpenAPI docs as artifact
        uses: actions/upload-artifact@v4
        with:
          name: openapi-docs
          path: api-docs/
